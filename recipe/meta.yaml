{% set name = "festival" %}
{% set version = "2.5.1" %}

package:
  name: {{ name|lower }}-split
  version: {{ version }}

source:
  url: https://github.com/festvox/festival/archive/5db6ee949f4e4e9da25c87bd03b90e69f9011393.tar.gz
  sha256: 9f0d0e4f0e91fca4430ee4a6ca4d3d24bac444f36b4f4e9653c6119aadfae13e

build:
  run_exports:
    - {{ pin_subpackage('festival', max_pin='x.x') }}
  skip: True  # [win]
  number: 1

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - make
    - llvm-openmp  # [osx]
    - libgomp      # [linux]
    - libestools-dev  #  This package provides Make includes needed for buildsystem
    - libestools-static  # This is needed to satisfy Make, but not used
  host:
    - libestools-dev

outputs:
  - name: festival
    script: install.sh
    build:
      run_exports:
        - {{ pin_subpackage('festival', max_pin='x.x') }}
    requirements:
      build:  # This output doesn't build anything, but DSO link checks need these compiler tools to be present.
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - llvm-openmp  # [osx]
        - libgomp      # [linux]
    host:
        - libestools
    test:
      commands:
        - test -f $PREFIX/bin/festival
        - test -f $PREFIX/bin/festival_client
        - test -f $PREFIX/bin/text2wave
        - test -f $PREFIX/lib/init.scm
        - festival --version
        - festival_client --version
        - text2wave -h

  - name: festival-dev
    script: install_devel.sh
    build:
      run_exports:
        - {{ pin_subpackage('festival', max_pin='x.x') }}
    requirements:
      run:
        - {{ pin_subpackage("festival", exact=True) }}
    test:
      commands:
        - test -f $PREFIX/include/festival/festival.h

  - name: libfestival-static
    script: install_static.sh
    requirements:
      run:
        - {{ pin_subpackage("festival-dev", exact=True) }}
    test:
      commands:
        - test -f $PREFIX/lib/libFestival.a

about:
  home: https://github.com/festvox/festival
  summary: 'Festival offers a general framework for building speech synthesis systems as well as including examples of various modules'
  description: |
    Festival offers a general framework for building speech synthesis systems as well as including examples of various
    modules. As a whole it offers full text to speech through a number APIs: from shell level, though a Scheme command
    interpreter, as a C++ library, and an Emacs interface. Festival is multi-lingual (currently English (US and UK)
    and Spanish are distributed but a host of other voices have been developed by others) though English is the most
    advanced.
    The system is written in C++ and uses the Edinburgh Speech Tools for low level architecture and has a Scheme (SIOD)
    based command interpreter for control. Documentation is given in the FSF texinfo format which can generate, a
    printed manual, info files and HTML.
  license: BSD-4-Clause
  license_family: BSD
  license_file: COPYING
  doc_url: https://www.cstr.ed.ac.uk/projects/festival
  dev_url: https://github.com/festvox/festival

extra:
  feedstock-name: festival
  recipe-maintainers:
    - peci1
